<?xml version="1.0" encoding="UTF-8"?>

<project name="GetAccessUserProfile" default="build" basedir=".">

	<description>
		This is the Get Access User Profile (web-app) project
	</description>

	<import file="${basedir}/../DigitalBusinessCommon/build-common.xml" id="super.common" />

	<property name="dist.jar" value="GetAccessUserProfile.jar" />
	<property name="dist.war" value="${target.dir}/GetAccessUserProfile.war" />
	<property name="war.src" value="${basedir}/WebContent" />

	<!-- Define other project dependencies for this project -->

	<!-- Common project -->
	<property name="dependency.common.jar" value="DigitalBusinessCommon.jar" />
	<property name="dependency.common.dir" value="${basedir}/../DigitalBusinessCommon" />

	<!-- GA Util project -->
	<property name="dependency.ga.util.jar" value="GetAccessUserProfileUtil.jar" />
	<property name="dependency.ga.util.dir" value="${basedir}/../GetAccessUserProfileUtil" />

	<!-- GA Domain project -->
	<property name="dependency.ga.domain.jar" value="GetAccessUserProfileDomain.jar" />
	<property name="dependency.ga.domain.dir" value="${basedir}/../GetAccessUserProfileDomain" />

	<!-- GA Model project -->
	<property name="dependency.ga.model.jar" value="GetAccessUserProfileModel.jar" />
	<property name="dependency.ga.model.dir" value="${basedir}/../GetAccessUserProfileModel" />

	<!-- GA Persistence project -->
	<property name="dependency.ga.persistence.jar" value="GetAccessUserProfilePersistence.jar" />
	<property name="dependency.ga.persistence.dir" value="${basedir}/../GetAccessUserProfilePersistence" />

	<target name="init">

		<!--  Specify the dependency projects to build -->
		<ant antfile="${dependency.common.dir}/build.xml" target="build" inheritall="false" />
		<ant antfile="${dependency.ga.util.dir}/build.xml" target="build" inheritall="false" />
		<ant antfile="${dependency.ga.domain.dir}/build.xml" target="build" inheritall="false" />
		<ant antfile="${dependency.ga.model.dir}/build.xml" target="build" inheritall="false" />
		<ant antfile="${dependency.ga.persistence.dir}/build.xml" target="build" inheritall="false" />

		<!--  Specify the Projects to be included in the WAR if specified in .properties -->
		<path id="war-projects-dependency.path">
		</path>

		<!--  Specify the Libraries to be included in the WAR -->
		<path id="war-dependency.path">
		</path>

		<!--  Specify the Libraries to be used only for compiling this project -->
		<path id="application-dependency.path">

			<!-- Project dependencies -->
			<pathelement path="${dependency.common.dir}/target/${dependency.common.jar}" />
			<pathelement path="${dependency.ga.util.dir}/target/${dependency.ga.util.jar}" />
			<pathelement path="${dependency.ga.model.dir}/target/${dependency.ga.model.jar}" />
			<pathelement path="${dependency.ga.persistence.dir}/target/${dependency.ga.persistence.jar}" />
			<pathelement path="${dependency.ga.domain.dir}/target/${dependency.ga.domain.jar}" />

			<!-- Commons -->
			<fileset dir="${library.dir}/commons">
				<include name="**/*.jar" />
			</fileset>

			<!-- Get Access -->
			<fileset dir="${library.dir}/ga">
				<include name="**/*.jar" />
			</fileset>

			<!-- Chubb -->
			<pathelement path="${library.dir}/chubb/Jndi.jar" />

			<!-- J2EE -->
			<pathelement path="${library.dir}/ibm/j2ee/j2ee.jar" />

		</path>
	</target>

	<target name="build" depends="DigitalBusinessCommon.build">

		<create-war />
	</target>

	<!-- Overwrite this task from build-common to clear any additional project resources -->
	<target name="deldirs" depends="DigitalBusinessCommon.deldirs" description="Deletes all temporary output directories for the build">
		<if>
			<equals arg1="${delete.war.lib}" arg2="true" />
			<then>
				<delete>
					<fileset dir="${war.src}/WEB-INF/lib" includes="**/*.jar" />
				</delete>
			</then>
		</if>
	</target>

	<macrodef name="create-war">
		<sequential>
			<pathtofileset name="runtime.fileset" pathrefid="war-dependency.path" dir="${library.dir.path}" />
			<pathtofileset name="runtime.projects.fileset" pathrefid="war-projects-dependency.path" dir="${basedir}/.." />

			<copy todir="${war.src}/WEB-INF/lib" flatten="true" overwrite="true">
				<fileset refid="runtime.fileset" />
			</copy>

			<if>
				<equals arg1="${include.projects.war.lib}" arg2="true" />
				<then>
					<copy todir="${war.src}/WEB-INF/lib" flatten="true" overwrite="true">
						<fileset refid="runtime.projects.fileset" />
						<fileset file="${target.dir}/${dist.jar}" />
					</copy>
				</then>
			</if>

			<!-- GENERATE THE WAR FILE -->
			<war destfile="${dist.war}" webxml="${war.src}/WEB-INF/web.xml" basedir="${war.src}" manifest="${war.src}/META-INF/MANIFEST.MF" />

		</sequential>
	</macrodef>

</project>