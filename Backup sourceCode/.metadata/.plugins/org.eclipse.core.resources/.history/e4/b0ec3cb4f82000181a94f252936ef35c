package com.chubb.dgmk.caf.wsc.accessors.test;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.chubb.dgmk.caf.domain.model.Product;
import com.chubb.dgmk.caf.util.CAFPropertiesUtil;
import com.chubb.dgmk.caf.util.ICAFConstants;
import com.chubb.dgmk.caf.wsc.accessors.UserProfileRetrievalAccessor;

import ei.product.get_marketing_product_group_list_reply_pdt1x1.GetMarketingProductGroupListReply;
import ei.product.get_marketing_product_group_list_request_pdt1x1.GetMarketingProductGroupListRequest;
import ei.product.product_retrieval_pdt1x1_http.ProductRetrievalPDT1X1HTTP_ProductRetrievalPDT1X1HttpPortProxy;
import ei.user.profile.User;
import ei.user.profile.UserProfile;

public class UserProfileRetrievalAccessorTest {

	UserProfileRetrievalAccessor userProfileRetrievalAccessor;
	UserProfileRetrievalAccessor privateObject;
	Method privateMethod;

	@Before
	public void setUp() throws Exception {
		userProfileRetrievalAccessor=new UserProfileRetrievalAccessor();
		privateObject=new UserProfileRetrievalAccessor();
		CAFPropertiesUtil.setUserProfileRetrievalEndpoint("http://eiuserpfileretcrp31x1-ps:80/Corporate4ServicesWeb/sca/UserProfileRetrievalCRP31X1Http");
	}

	/**
	 * <pre>
	 * 
	 * testGetEndpoint
	 * 
	 * This method is used to test the endPoint for the UserRetrieval service from
	 * the properties file.
	 *  
	 * @return void
	 * 
	 * </pre>
	 */
	@Test
	public final void testGetEndpoint() {
		String endPointUrl="http://eiuserpfileretcrp31x1-ps:80/Corporate4ServicesWeb/sca/UserProfileRetrievalCRP31X1Http";

		String endPoint=userProfileRetrievalAccessor.getEndpoint();

		assertTrue("Invalid endPoint url for policy retrieval",endPointUrl.equals(endPoint));
	}

	/**
	 * <pre>
	 * 
	 * testGetUserInformation
	 * user
	 * This method is used to test the endPoint for the UserRetrieval service from
	 * the properties file.
	 *  
	 * @return void
	 * 
	 * </pre>
	 * @throws Exception 
	 */
	@Test
	public final void testGetUserInformation() throws Exception {
		User user=null;
		UserProfile userProfile=new UserProfile();
		userProfile.setExternalUserId("maagt_07");
		
		user = userProfileRetrievalAccessor.getUserInformation(userProfile);
			System.out.println("====="+user);
			assertNotNull("User is not null", user);
		

	}

	

	/**
	 * @throws Exception
	 */
	@After
	public void tearDown() throws Exception {
		userProfileRetrievalAccessor=null;
		privateObject=null;
	}
}
